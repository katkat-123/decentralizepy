[DATASET]
dataset_package = decentralizepy.datasets.CIFAR10
dataset_class = CIFAR10
model_class = LeNet
train_dir = /mnt/nfs/shared/CIFAR
test_dir = /mnt/nfs/shared/CIFAR
; python list of fractions below
sizes =
random_seed = 99
partition_niid = dirichlet
alpha = 1

[OPTIMIZER_PARAMS]
optimizer_package = torch.optim
optimizer_class = SGD
lr = 0.01

[TRAIN_PARAMS]
training_package = decentralizepy.training.Training
training_class = Training
rounds = 3
full_epochs = False
batch_size = 8
shuffle = True
loss_package = torch.nn
loss_class = CrossEntropyLoss

[COMMUNICATION]
comm_package = decentralizepy.communication.TCP
comm_class = TCP
addresses_filepath = ip_addr_6Machines.json

[SHARING]
sharing_package = decentralizepy.sharing.JWINS.JWINS
sharing_class = JWINS
change_based_selection = True
alpha_list = [0.1,0.15,0.2,0.25,0.3,0.4,1.0]
wavelet=sym2
level= 4
accumulation = True
accumulate_averaging_changes = True
metadata_cap = 0.5
compression_package = decentralizepy.compression.EliasFpzip
compression_class = EliasFpzip
compress = True
